/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GiftCard, GiftCardInterface } from "../../contracts/GiftCard";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_giftNetwork",
        type: "address",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_requierementToBeReleased",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dateToBeReleased",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "AmountTransfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "BeneficiaryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Participated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProperlyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SendedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "StatusChanged",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "creationDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCreator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDateToBeReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getIsBeneficiary",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getIsCreator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getIsParticipant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startIndex",
        type: "uint256",
      },
    ],
    name: "getParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_pageSize",
        type: "uint256",
      },
    ],
    name: "getParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipantsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "releaseAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requierementToBeReleased",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBeneficiary",
        type: "address",
      },
    ],
    name: "setBeneficiaryDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum CardStatus",
        name: "_newStatus",
        type: "uint8",
      },
    ],
    name: "setStatusByDAO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "title",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260405162001b8038038062001b80833981016040819052620000269162000584565b6200003133620001d2565b6001600160a01b0386166200008d5760405162461bcd60e51b815260206004820152601e60248201527f43726561746f7227732061646472657373206973206d616e6461746f7279000060448201526064015b60405180910390fd5b6000855111620000d55760405162461bcd60e51b81526020600482015260126024820152715469746c65206973206d616e6461746f727960701b604482015260640162000084565b600180546001600160a01b0319166001600160a01b038916178155600e805460ff19168280021790555042600555600880546001600160a01b0319166001600160a01b03881617905560036200012c8682620006df565b5060046200013b8582620006df565b5060068390556007829055600980546001600160a01b0319166001600160a01b03831690811790915515620001835760095462000183906001600160a01b0316600362000222565b6200019086600162000222565b6200019c863462000295565b6040517fef203b8176093a94d60652a5dc1048d011d880dd2c5fb6e9c1a4bff1e770379690600090a15050505050505062000809565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166000908152600c60205260409020600190818360038111156200025357620002536200063a565b6200025f9190620007c1565b60038110620002725762000272620007dd565b602091828204019190066101000a81548160ff0219169083151502179055505050565b6004600e5460ff166005811115620002b157620002b16200063a565b10620002f15760405162461bcd60e51b815260206004820152600e60248201526d10d85c99081a5cc81bdc195b995960921b604482015260640162000084565b47600654116200030757620003076002620003cf565b6001600160a01b0382166000908152600d60205260408120805483929062000331908490620007f3565b9091555062000344905082600262000222565b600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b03841690811790915560408051918252602082018390527fb198f199c43cc078ad46e5a5fabe03eba401f7417816c86af0bd2e7345c99506910160405180910390a15050565b806005811115620003e457620003e46200063a565b600e5460ff166005811115620003fe57620003fe6200063a565b14620004075750565b600e805482919060ff191660018360058111156200042957620004296200063a565b02179055507f99c35248cf9e83c1e055a99bbc800710d70388f78c6fd62b464b59a73958dd4e60018260058111156200046657620004666200063a565b620004729190620007c1565b8260058111156200048757620004876200063a565b6040805192835260208301919091520160405180910390a150565b80516001600160a01b0381168114620004ba57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004e757600080fd5b81516001600160401b0380821115620005045762000504620004bf565b604051601f8301601f19908116603f011681019082821181831017156200052f576200052f620004bf565b816040528381526020925086838588010111156200054c57600080fd5b600091505b8382101562000570578582018301518183018401529082019062000551565b600093810190920192909252949350505050565b600080600080600080600060e0888a031215620005a057600080fd5b620005ab88620004a2565b9650620005bb60208901620004a2565b60408901519096506001600160401b0380821115620005d957600080fd5b620005e78b838c01620004d5565b965060608a0151915080821115620005fe57600080fd5b506200060d8a828b01620004d5565b9450506080880151925060a088015191506200062c60c08901620004a2565b905092959891949750929550565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806200066557607f821691505b6020821081036200068657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620006da57600081815260208120601f850160051c81016020861015620006b55750805b601f850160051c820191505b81811015620006d657828155600101620006c1565b5050505b505050565b81516001600160401b03811115620006fb57620006fb620004bf565b62000713816200070c845462000650565b846200068c565b602080601f8311600181146200074b5760008415620007325750858301515b600019600386901b1c1916600185901b178555620006d6565b600085815260208120601f198616915b828110156200077c578886015182559484019460019091019084016200075b565b50858210156200079b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b81810381811115620007d757620007d7620007ab565b92915050565b634e487b7160e01b600052603260045260246000fd5b80820180821115620007d757620007d7620007ab565b61136780620008196000396000f3fe6080604052600436106101095760003560e01c80630357371d1461012457806305b34410146101445780630ee2cb101461016d5780634a79d50c1461019f5780634e69d560146101c1578063565a2e2c146101d6578063577eb60a146101f4578063580fc80a146102245780635aa68ac014610244578063715018a6146102665780637284e4161461027b57806380c438f3146102905780638da5cb5b146102b05780639491b349146102c557806399ae1ec2146102db578063c1e3bd3e146102fb578063cabfaa181461031b578063cbc84b2b14610330578063ded0ed1614610345578063ed236da714610365578063f2fde38b14610385578063f971b192146103a55761011a565b3661011a5761011833346103c5565b005b61011833346103c5565b34801561013057600080fd5b5061011861013f366004610f84565b6104d9565b34801561015057600080fd5b5061015a60055481565b6040519081526020015b60405180910390f35b34801561017957600080fd5b506008546001600160a01b03165b6040516001600160a01b039091168152602001610164565b3480156101ab57600080fd5b506101b4610600565b6040516101649190610fb0565b3480156101cd57600080fd5b5061015a61068e565b3480156101e257600080fd5b506009546001600160a01b0316610187565b34801561020057600080fd5b5061021461020f366004610ffe565b6106ad565b6040519015158152602001610164565b34801561023057600080fd5b5061011861023f366004610ffe565b6106c0565b34801561025057600080fd5b50610259610780565b6040516101649190611022565b34801561027257600080fd5b506101186107e2565b34801561028757600080fd5b506101b46107f6565b34801561029c57600080fd5b506101186102ab36600461106f565b610803565b3480156102bc57600080fd5b5061018761086c565b3480156102d157600080fd5b5061015a60065481565b3480156102e757600080fd5b506102146102f6366004610ffe565b61087b565b34801561030757600080fd5b50610259610316366004611090565b610888565b34801561032757600080fd5b50600a5461015a565b34801561033c57600080fd5b5060075461015a565b34801561035157600080fd5b506102596103603660046110a9565b61098a565b34801561037157600080fd5b50610214610380366004610ffe565b610a8c565b34801561039157600080fd5b506101186103a0366004610ffe565b610a99565b3480156103b157600080fd5b506101186103c0366004610ffe565b610b0f565b6004600e5460ff1660058111156103de576103de6110cb565b106104045760405162461bcd60e51b81526004016103fb906110e1565b60405180910390fd5b4760065411610417576104176002610b78565b6001600160a01b0382166000908152600d60205260408120805483929061043f90849061111f565b909155506104509050826002610c39565b600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0384161790556040517fb198f199c43cc078ad46e5a5fabe03eba401f7417816c86af0bd2e7345c99506906104cd9084908490611132565b60405180910390a15050565b6104e2336106ad565b6104fe5760405162461bcd60e51b81526004016103fb9061114b565b6005600e5460ff166005811115610517576105176110cb565b106105345760405162461bcd60e51b81526004016103fb9061117f565b6001600e5460ff16600581111561054d5761054d6110cb565b1161056a5760405162461bcd60e51b81526004016103fb906111b3565b42600754111561058c5760405162461bcd60e51b81526004016103fb906111f4565b478111156105f25760405162461bcd60e51b815260206004820152602d60248201527f5472616e73666572656427732076616c7565206578636565647320746865206360448201526c185c9909dcc818dbdb9d195b9d609a1b60648201526084016103fb565b6105fc8282610ca4565b5050565b6003805461060d90611236565b80601f016020809104026020016040519081016040528092919081815260200182805461063990611236565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b505050505081565b600e5460009060ff1660058111156106a8576106a86110cb565b905090565b60006106ba826003610da0565b92915050565b6106c9336106ad565b6106e55760405162461bcd60e51b81526004016103fb9061114b565b6005600e5460ff1660058111156106fe576106fe6110cb565b1061071b5760405162461bcd60e51b81526004016103fb9061117f565b6001600e5460ff166005811115610734576107346110cb565b116107515760405162461bcd60e51b81526004016103fb906111b3565b4260075411156107735760405162461bcd60e51b81526004016103fb906111f4565b61077d8147610ca4565b50565b6060600a8054806020026020016040519081016040528092919081815260200182805480156107d857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107ba575b5050505050905090565b6107ea610e04565b6107f46000610e63565b565b6004805461060d90611236565b6002546001600160a01b0316331461082d5760405162461bcd60e51b81526004016103fb90611270565b6004600e5460ff166005811115610846576108466110cb565b106108635760405162461bcd60e51b81526004016103fb906110e1565b61077d81610b78565b6000546001600160a01b031690565b60006106ba826002610da0565b600a546060908211156108ad5760405162461bcd60e51b81526004016103fb906112a7565b600a546000906108be9084906112d9565b6001600160401b038111156108d5576108d56112ec565b6040519080825280602002602001820160405280156108fe578160200160208202803683370190505b509050825b600a5481101561098357600a610919828661111f565b8154811061092957610929611302565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061095957610959611302565b6001600160a01b03909216602092830291909101909101528061097b81611318565b915050610903565b5092915050565b60606000610998838561111f565b600a549091508111156109bd5760405162461bcd60e51b81526004016103fb906112a7565b6000836001600160401b038111156109d7576109d76112ec565b604051908082528060200260200182016040528015610a00578160200160208202803683370190505b509050845b82811015610a8357600a610a19828861111f565b81548110610a2957610a29611302565b9060005260206000200160009054906101000a90046001600160a01b0316828281518110610a5957610a59611302565b6001600160a01b039092166020928302919091019091015280610a7b81611318565b915050610a05565b50949350505050565b60006106ba826001610da0565b610aa1610e04565b6001600160a01b038116610b065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fb565b61077d81610e63565b6002546001600160a01b03163314610b395760405162461bcd60e51b81526004016103fb90611270565b6004600e5460ff166005811115610b5257610b526110cb565b10610b6f5760405162461bcd60e51b81526004016103fb906110e1565b61077d81610eb3565b806005811115610b8a57610b8a6110cb565b600e5460ff166005811115610ba157610ba16110cb565b14610ba95750565b600e805482919060ff19166001836005811115610bc857610bc86110cb565b02179055507f99c35248cf9e83c1e055a99bbc800710d70388f78c6fd62b464b59a73958dd4e6001826005811115610c0257610c026110cb565b610c0c91906112d9565b826005811115610c1e57610c1e6110cb565b6040805192835260208301919091520160405180910390a150565b6001600160a01b0382166000908152600c6020526040902060019081836003811115610c6757610c676110cb565b610c7191906112d9565b60038110610c8157610c81611302565b602091828204019190066101000a81548160ff0219169083151502179055505050565b47811015610cb657610cb66004610b78565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610d03576040519150601f19603f3d011682016040523d82523d6000602084013e610d08565b606091505b5050905080610d505760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e642076616c756560601b60448201526064016103fb565b7fc3ce4eeef579533b0a2d7ae2e50eb68dccae3b183dc8cce60267f3c9fa4935c08383604051610d81929190611132565b60405180910390a147600003610d9b57610d9b6005610b78565b505050565b6001600160a01b0382166000908152600c602052604081206001836003811115610dcc57610dcc6110cb565b610dd691906112d9565b60038110610de657610de6611302565b602081049091015460ff601f9092166101000a900416905092915050565b33610e0d61086c565b6001600160a01b0316146107f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811615610f155760405162461bcd60e51b815260206004820152602260248201527f412062656e65666963696172792061646472657373206973206e656365737361604482015261727960f01b60648201526084016103fb565b600980546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d91016104cd565b6001600160a01b038116811461077d57600080fd5b60008060408385031215610f9757600080fd5b8235610fa281610f6f565b946020939093013593505050565b600060208083528351808285015260005b81811015610fdd57858101830151858201604001528201610fc1565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561101057600080fd5b813561101b81610f6f565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110635783516001600160a01b03168352928401929184019160010161103e565b50909695505050505050565b60006020828403121561108157600080fd5b81356006811061101b57600080fd5b6000602082840312156110a257600080fd5b5035919050565b600080604083850312156110bc57600080fd5b50508035926020909101359150565b634e487b7160e01b600052602160045260246000fd5b6020808252600e908201526d10d85c99081a5cc81bdc195b995960921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156106ba576106ba611109565b6001600160a01b03929092168252602082015260400190565b6020808252601a9082015279596f75277265206e6f74207468652062656e656669636961727960301b604082015260600190565b6020808252601a908201527910d85c99081a5cc818dbdb5c1b195d1b1e481c995b19585cd95960321b604082015260600190565b60208082526021908201527f4361726427732072657175696572656d656e742069736e2774207265616368656040820152601960fa1b606082015260800190565b60208082526022908201527f4361726427732072656c656173656420646174652069736e2774207265616368604082015261195960f21b606082015260800190565b600181811c9082168061124a57607f821691505b60208210810361126a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601e908201527f53656e6465722069736e276e74207468652044414f20636f6e74726163740000604082015260600190565b6020808252601890820152775265616420696e646578206f7574206f6620626f756e647360401b604082015260600190565b818103818111156106ba576106ba611109565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161132a5761132a611109565b506001019056fea2646970667358221220c4f8e69c110d83fc4edc4b1c264364287cc4746d642f35ad80d326ee3f7ce4ab64736f6c63430008110033";

type GiftCardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftCardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftCard__factory extends ContractFactory {
  constructor(...args: GiftCardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _giftNetwork: PromiseOrValue<string>,
    _creator: PromiseOrValue<string>,
    _title: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    _requierementToBeReleased: PromiseOrValue<BigNumberish>,
    _dateToBeReleased: PromiseOrValue<BigNumberish>,
    _beneficiary: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftCard> {
    return super.deploy(
      _giftNetwork,
      _creator,
      _title,
      _description,
      _requierementToBeReleased,
      _dateToBeReleased,
      _beneficiary,
      overrides || {}
    ) as Promise<GiftCard>;
  }
  override getDeployTransaction(
    _giftNetwork: PromiseOrValue<string>,
    _creator: PromiseOrValue<string>,
    _title: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    _requierementToBeReleased: PromiseOrValue<BigNumberish>,
    _dateToBeReleased: PromiseOrValue<BigNumberish>,
    _beneficiary: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _giftNetwork,
      _creator,
      _title,
      _description,
      _requierementToBeReleased,
      _dateToBeReleased,
      _beneficiary,
      overrides || {}
    );
  }
  override attach(address: string): GiftCard {
    return super.attach(address) as GiftCard;
  }
  override connect(signer: Signer): GiftCard__factory {
    return super.connect(signer) as GiftCard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftCardInterface {
    return new utils.Interface(_abi) as GiftCardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftCard {
    return new Contract(address, _abi, signerOrProvider) as GiftCard;
  }
}
