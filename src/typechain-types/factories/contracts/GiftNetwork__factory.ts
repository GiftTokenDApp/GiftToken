/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  GiftNetwork,
  GiftNetworkInterface,
} from "../../contracts/GiftNetwork";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "AddedFriend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Funding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "SendedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "SettedUser",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_friend",
        type: "address",
      },
    ],
    name: "addFriend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFriends",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFriendsAsUsers",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "pseudo",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsLink",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "friends",
            type: "address[]",
          },
        ],
        internalType: "struct User[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "pseudo",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsLink",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "friends",
            type: "address[]",
          },
        ],
        internalType: "struct User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "readMessage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sendDate",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
        ],
        internalType: "struct Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_pseudo",
        type: "string",
      },
      {
        internalType: "string",
        name: "_ipfsLink",
        type: "string",
      },
    ],
    name: "setUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b612463806200010e6000396000f3fe6080604052600436106100a05760003560e01c8063715018a611610064578063715018a6146102265780638da5cb5b1461023d578063bab18a4914610268578063d7a1cfe114610293578063de6f24bb146102bc578063f2fde38b146102e5576100e0565b80630931d3af1461011b5780631f8f727014610158578063255e9c11146101835780635728b973146101c05780636f77926b146101e9576100e0565b366100e0577f1af855f8ecf9e2874e8d95b2f5b91f1afa7cea4cfac27e00fb165ebec0e671af33346040516100d692919061155d565b60405180910390a1005b7f1af855f8ecf9e2874e8d95b2f5b91f1afa7cea4cfac27e00fb165ebec0e671af333460405161011192919061155d565b60405180910390a1005b34801561012757600080fd5b50610142600480360381019061013d91906115bc565b61030e565b60405161014f9190611604565b60405180910390f35b34801561016457600080fd5b5061016d610368565b60405161017a91906116dd565b60405180910390f35b34801561018f57600080fd5b506101aa60048036038101906101a591906115bc565b61047e565b6040516101b791906118b0565b60405180910390f35b3480156101cc57600080fd5b506101e760048036038101906101e29190611937565b6105f1565b005b3480156101f557600080fd5b50610210600480360381019061020b91906115bc565b6109fc565b60405161021d9190611a85565b60405180910390f35b34801561023257600080fd5b5061023b610c07565b005b34801561024957600080fd5b50610252610c1b565b60405161025f9190611aa7565b60405180910390f35b34801561027457600080fd5b5061027d610c44565b60405161028a9190611be2565b60405180910390f35b34801561029f57600080fd5b506102ba60048036038101906102b591906115bc565b610e68565b005b3480156102c857600080fd5b506102e360048036038101906102de9190611c04565b610fd9565b005b3480156102f157600080fd5b5061030c600480360381019061030791906115bc565b6111d6565b005b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461035e90611c93565b9050119050919050565b60606103733361030e565b6103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990611d47565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561047457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161042a575b5050505050905090565b6060600061048c3384611259565b905060026000828152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105e557838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461055490611c93565b80601f016020809104026020016040519081016040528092919081815260200182805461058090611c93565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b505050505081525050815260200190600101906104c1565b50505050915050919050565b838360008282905011610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063090611db3565b60405180910390fd5b7f20000000000000000000000000000000000000000000000000000000000000008282600081811061066e5761066d611dd3565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d190611e4e565b60405180910390fd5b838360008282905011610722576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071990611db3565b60405180910390fd5b7f20000000000000000000000000000000000000000000000000000000000000008282600081811061075757610756611dd3565b5b9050013560f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036107c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ba90611e4e565b60405180910390fd5b604051806060016040528089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561092457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108da575b5050505050815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816109809190612049565b5060208201518160010190816109969190612049565b5060408201518160020190805190602001906109b392919061143b565b509050507fe92ae53938d423e86211c78a26668f1233be4ac33b882e420d3b50b6e461b82c3389896040516109ea93929190612157565b60405180910390a15050505050505050565b610a046114c5565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054610a5e90611c93565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8a90611c93565b8015610ad75780601f10610aac57610100808354040283529160200191610ad7565b820191906000526020600020905b815481529060010190602001808311610aba57829003601f168201915b50505050508152602001600182018054610af090611c93565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1c90611c93565b8015610b695780601f10610b3e57610100808354040283529160200191610b69565b820191906000526020600020905b815481529060010190602001808311610b4c57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610bf757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bad575b5050505050815250509050919050565b610c0f6112f1565b610c19600061136f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060610c4f3361030e565b610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8590611d47565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020180549050905060008103610d3d57600067ffffffffffffffff811115610cfb57610cfa611e6e565b5b604051908082528060200260200182016040528015610d3457816020015b610d216114c5565b815260200190600190039081610d195790505b50915050610e65565b60008167ffffffffffffffff811115610d5957610d58611e6e565b5b604051908082528060200260200182016040528015610d9257816020015b610d7f6114c5565b815260200190600190039081610d775790505b50905060005b82811015610e5e576000610e29600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018381548110610df957610df8611dd3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166109fc565b905080838381518110610e3f57610e3e611dd3565b5b6020026020010181905250508080610e56906121b8565b915050610d98565b5080925050505b90565b610e713361030e565b610eb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea790611d47565b60405180910390fd5b80610eba8161030e565b610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef090612272565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0fbde3291bf3d63d0e6eb1ab37390f2d27b3eb91810b3274a9e7e2ea862720943383604051610fcd929190612292565b60405180910390a15050565b610fe23361030e565b611021576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101890611d47565b60405180910390fd5b8261102b8161030e565b61106a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106190612272565b60405180910390fd5b60006110763386611259565b9050600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090506002600083815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816111949190612049565b5050507fb0f6b928659c68d77a7b39dbee6f2f977357d6619e7a34725ba447e93be82934336040516111c69190611aa7565b60405180910390a1505050505050565b6111de6112f1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361124d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112449061232d565b60405180910390fd5b6112568161136f565b50565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1610156112bf5782826040516020016112a2929190612395565b6040516020818303038152906040528051906020012090506112eb565b81836040516020016112d2929190612395565b6040516020818303038152906040528051906020012090505b92915050565b6112f9611433565b73ffffffffffffffffffffffffffffffffffffffff16611317610c1b565b73ffffffffffffffffffffffffffffffffffffffff161461136d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113649061240d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280548282559060005260206000209081019282156114b4579160200282015b828111156114b35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061145b565b5b5090506114c191906114e6565b5090565b60405180606001604052806060815260200160608152602001606081525090565b5b808211156114ff5760008160009055506001016114e7565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061152e82611503565b9050919050565b61153e81611523565b82525050565b6000819050919050565b61155781611544565b82525050565b60006040820190506115726000830185611535565b61157f602083018461154e565b9392505050565b600080fd5b600080fd5b61159981611523565b81146115a457600080fd5b50565b6000813590506115b681611590565b92915050565b6000602082840312156115d2576115d1611586565b5b60006115e0848285016115a7565b91505092915050565b60008115159050919050565b6115fe816115e9565b82525050565b600060208201905061161960008301846115f5565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61165481611523565b82525050565b6000611666838361164b565b60208301905092915050565b6000602082019050919050565b600061168a8261161f565b611694818561162a565b935061169f8361163b565b8060005b838110156116d05781516116b7888261165a565b97506116c283611672565b9250506001810190506116a3565b5085935050505092915050565b600060208201905081810360008301526116f7818461167f565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61173481611544565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611774578082015181840152602081019050611759565b60008484015250505050565b6000601f19601f8301169050919050565b600061179c8261173a565b6117a68185611745565b93506117b6818560208601611756565b6117bf81611780565b840191505092915050565b60006060830160008301516117e2600086018261164b565b5060208301516117f5602086018261172b565b506040830151848203604086015261180d8282611791565b9150508091505092915050565b600061182683836117ca565b905092915050565b6000602082019050919050565b6000611846826116ff565b611850818561170a565b9350836020820285016118628561171b565b8060005b8581101561189e578484038952815161187f858261181a565b945061188a8361182e565b925060208a01995050600181019050611866565b50829750879550505050505092915050565b600060208201905081810360008301526118ca818461183b565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126118f7576118f66118d2565b5b8235905067ffffffffffffffff811115611914576119136118d7565b5b6020830191508360018202830111156119305761192f6118dc565b5b9250929050565b6000806000806040858703121561195157611950611586565b5b600085013567ffffffffffffffff81111561196f5761196e61158b565b5b61197b878288016118e1565b9450945050602085013567ffffffffffffffff81111561199e5761199d61158b565b5b6119aa878288016118e1565b925092505092959194509250565b600082825260208201905092915050565b60006119d48261161f565b6119de81856119b8565b93506119e98361163b565b8060005b83811015611a1a578151611a01888261165a565b9750611a0c83611672565b9250506001810190506119ed565b5085935050505092915050565b60006060830160008301518482036000860152611a448282611791565b91505060208301518482036020860152611a5e8282611791565b91505060408301518482036040860152611a7882826119c9565b9150508091505092915050565b60006020820190508181036000830152611a9f8184611a27565b905092915050565b6000602082019050611abc6000830184611535565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006060830160008301518482036000860152611b0b8282611791565b91505060208301518482036020860152611b258282611791565b91505060408301518482036040860152611b3f82826119c9565b9150508091505092915050565b6000611b588383611aee565b905092915050565b6000602082019050919050565b6000611b7882611ac2565b611b828185611acd565b935083602082028501611b9485611ade565b8060005b85811015611bd05784840389528151611bb18582611b4c565b9450611bbc83611b60565b925060208a01995050600181019050611b98565b50829750879550505050505092915050565b60006020820190508181036000830152611bfc8184611b6d565b905092915050565b600080600060408486031215611c1d57611c1c611586565b5b6000611c2b868287016115a7565b935050602084013567ffffffffffffffff811115611c4c57611c4b61158b565b5b611c58868287016118e1565b92509250509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cab57607f821691505b602082108103611cbe57611cbd611c64565b5b50919050565b600082825260208201905092915050565b7f53656e64657220646f65736e2774206861766520616e2075736572206163636f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000611d31602383611cc4565b9150611d3c82611cd5565b604082019050919050565b60006020820190508181036000830152611d6081611d24565b9050919050565b7f537472696e6720697320656d7074790000000000000000000000000000000000600082015250565b6000611d9d600f83611cc4565b9150611da882611d67565b602082019050919050565b60006020820190508181036000830152611dcc81611d90565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f537472696e672073746172747320776974682073706163650000000000000000600082015250565b6000611e38601883611cc4565b9150611e4382611e02565b602082019050919050565b60006020820190508181036000830152611e6781611e2b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611eff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ec2565b611f098683611ec2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611f46611f41611f3c84611544565b611f21565b611544565b9050919050565b6000819050919050565b611f6083611f2b565b611f74611f6c82611f4d565b848454611ecf565b825550505050565b600090565b611f89611f7c565b611f94818484611f57565b505050565b5b81811015611fb857611fad600082611f81565b600181019050611f9a565b5050565b601f821115611ffd57611fce81611e9d565b611fd784611eb2565b81016020851015611fe6578190505b611ffa611ff285611eb2565b830182611f99565b50505b505050565b600082821c905092915050565b600061202060001984600802612002565b1980831691505092915050565b6000612039838361200f565b9150826002028217905092915050565b6120528261173a565b67ffffffffffffffff81111561206b5761206a611e6e565b5b6120758254611c93565b612080828285611fbc565b600060209050601f8311600181146120b357600084156120a1578287015190505b6120ab858261202d565b865550612113565b601f1984166120c186611e9d565b60005b828110156120e9578489015182556001820191506020850194506020810190506120c4565b868310156121065784890151612102601f89168261200f565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b60006121368385611cc4565b935061214383858461211b565b61214c83611780565b840190509392505050565b600060408201905061216c6000830186611535565b818103602083015261217f81848661212a565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121c382611544565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121f5576121f4612189565b5b600182019050919050565b7f4164647265737320646f65736e2774206861766520616e20757365722061636360008201527f6f756e7400000000000000000000000000000000000000000000000000000000602082015250565b600061225c602483611cc4565b915061226782612200565b604082019050919050565b6000602082019050818103600083015261228b8161224f565b9050919050565b60006040820190506122a76000830185611535565b6122b46020830184611535565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612317602683611cc4565b9150612322826122bb565b604082019050919050565b600060208201905081810360008301526123468161230a565b9050919050565b60008160601b9050919050565b60006123658261234d565b9050919050565b60006123778261235a565b9050919050565b61238f61238a82611523565b61236c565b82525050565b60006123a1828561237e565b6014820191506123b1828461237e565b6014820191508190509392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006123f7602083611cc4565b9150612402826123c1565b602082019050919050565b60006020820190508181036000830152612426816123ea565b905091905056fea26469706673582212200104e2ca411f13d3510b5d361ba0a0a3ef0db3705a08a79e0b572b76e2a134a964736f6c63430008110033";

type GiftNetworkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftNetworkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftNetwork__factory extends ContractFactory {
  constructor(...args: GiftNetworkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftNetwork> {
    return super.deploy(overrides || {}) as Promise<GiftNetwork>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GiftNetwork {
    return super.attach(address) as GiftNetwork;
  }
  override connect(signer: Signer): GiftNetwork__factory {
    return super.connect(signer) as GiftNetwork__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftNetworkInterface {
    return new utils.Interface(_abi) as GiftNetworkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftNetwork {
    return new Contract(address, _abi, signerOrProvider) as GiftNetwork;
  }
}
