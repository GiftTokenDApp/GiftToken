/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GiftDAO, GiftDAOInterface } from "../../contracts/GiftDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_giftCard",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "BeneficiaryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Funding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "ParticipantVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PropositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PropositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RequirementsOutpassed",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "changeBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createDeclaredBeneficiaryProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createOutpassedRequierementsProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closureDate",
        type: "uint256",
      },
      {
        internalType: "enum CardProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CardProposalResult",
        name: "proposalResult",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "approvedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refusedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closedDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "determinateProposalResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "creationDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closureDate",
            type: "uint256",
          },
          {
            internalType: "enum CardProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "enum CardProposalResult",
            name: "proposalResult",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "approvedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refusedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closedDate",
            type: "uint256",
          },
        ],
        internalType: "struct Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closureDate",
        type: "uint256",
      },
      {
        internalType: "enum CardProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CardProposalResult",
        name: "proposalResult",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "approvedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refusedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closedDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e7c38038062001e7c8339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b611d8580620000f76000396000f3fe6080604052600436106100a65760003560e01c80632b49d425146100f35780634b9f5c98146101275780635a1201a414610149578063622d21311461015e57806362564c481461017e578063715018a6146101a05780638d337b81146101b55780638da5cb5b146101e35780639e0070c314610210578063a9ed130614610230578063d118b91914610250578063f2fde38b14610270578063fbf0cd3e14610290576100d4565b366100d457600080516020611d3083398151915233346040516100ca9291906115ed565b60405180910390a1005b600080516020611d3083398151915233346040516100ca9291906115ed565b3480156100ff57600080fd5b506101086102b0565b60405161011e9a99989796959493929190611686565b60405180910390f35b34801561013357600080fd5b506101476101423660046116fd565b610386565b005b34801561015557600080fd5b506101476104ce565b34801561016a57600080fd5b506101476101793660046117dd565b61070a565b34801561018a57600080fd5b506101936108dd565b60405161011e919061182c565b3480156101ac57600080fd5b50610147610b07565b3480156101c157600080fd5b506101d56101d0366004611914565b610b1b565b60405190815260200161011e565b3480156101ef57600080fd5b506101f8610b5a565b6040516001600160a01b03909116815260200161011e565b34801561021c57600080fd5b5061014761022b366004611931565b610b69565b34801561023c57600080fd5b5061010861024b36600461196d565b610d87565b34801561025c57600080fd5b50600c546101f8906001600160a01b031681565b34801561027c57600080fd5b5061014761028b366004611914565b610dda565b34801561029c57600080fd5b506101476102ab3660046117dd565b610e50565b600280546003546004546005546006546007805495966001600160a01b03909516959394929360ff90921692916102e690611986565b80601f016020809104026020016040519081016040528092919081815260200182805461031290611986565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b50505050600683015460078401546008850154600990950154939460ff909216939092508a565b600160085460ff16600681111561039f5761039f611606565b146104035760405162461bcd60e51b815260206004820152602960248201527f43757272656e742070726f706f73616c20737461747573206e6f7420616c6c6f604482015268777320766f74696e6760b81b60648201526084015b60405180910390fd5b600061040e33610b1b565b146104535760405162461bcd60e51b8152602060048201526015602482015274596f7520616c7265616479206861766520766f746560581b60448201526064016103fa565b80156104735760098054906000610469836119d0565b9190505550610489565b600a8054906000610483836119d0565b91905055505b6002546040805191825233602083015282151582820152517f8aa814e73bd4d29db7480c805f624cd85fec5020883088fd2ac24f322eef4b9f9181900360600190a150565b600554421061051f5760405162461bcd60e51b815260206004820181905260248201527f43757272656e742070726f706f73616c2063616e277420626520636c6f73656460448201526064016103fa565b42600b55600a5460095411156105505760025b60085460ff16600681111561054957610549611606565b505061066a565b600a546009541015610563576004610532565b60006105df600160009054906101000a90046001600160a01b03166001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d091906119e9565b60028111156105f0576105f0611606565b9050600181600281111561060657610606611606565b0361062c5760035b60085460ff16600681111561062557610625611606565b5050610668565b600181600281111561064057610640611606565b0361064c57600561060e565b600660085460ff16600681111561066557610665611606565b50505b505b600260085460ff16600681111561068357610683611606565b14806106a55750600360085460ff1660068111156106a3576106a3611606565b145b156106b2576106b2611018565b6002546008547fd1a300116d659d3a9ee22d14d85b48f34f2c3bb465171cdf21b99d3b539e38e5919060ff1660068111156106ef576106ef611606565b604080519283526020830191909152015b60405180910390a1565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190611a06565b106107935760405162461bcd60e51b81526004016103fa90611a1f565b600160085460ff1660068111156107ac576107ac611606565b036107c95760405162461bcd60e51b81526004016103fa90611a47565b6001600160a01b038216156107f05760405162461bcd60e51b81526004016103fa90611a88565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e91906119e9565b6001600160a01b0316146108b35760405162461bcd60e51b815260206004820152601c60248201527b412062656e656669636961727920616c72656164792065786973747360201b60448201526064016103fa565b600c80546001600160a01b0319166001600160a01b0384161790556108d9600282611111565b5050565b60408051600a808252610160820190925260609160009190816020015b610902611580565b8152602001906001900390816108fa57905050905060005b6109266001600a611aca565b8160ff1610801561095157506000600d8260ff16600a811061094a5761094a611add565b600a020154115b15610b01576000600d8260ff16600a811061096e5761096e611add565b6040805161014081018252600a92909202929092018054825260018101546001600160a01b031660208301526002810154928201929092526003808301546060830152600483015492935090918391608084019160ff16908111156109d5576109d5611606565b60038111156109e6576109e6611606565b81526020016005820180546109fa90611986565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2690611986565b8015610a735780601f10610a4857610100808354040283529160200191610a73565b820191906000526020600020905b815481529060010190602001808311610a5657829003601f168201915b505050918352505060068281015460209092019160ff1690811115610a9a57610a9a611606565b6006811115610aab57610aab611606565b81526020016007820154815260200160088201548152602001600982015481525050838360ff1681518110610ae257610ae2611add565b60200260200101819052508180610af890611af3565b9250505061091a565b50919050565b610b0f6114d1565b610b196000611530565b565b6001600160a01b0381166000908152607160209081526040808320600280548552925282205460ff1690811115610b5457610b54611606565b92915050565b6000546001600160a01b031690565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190611a06565b10610bf25760405162461bcd60e51b81526004016103fa90611a1f565b600160085460ff166006811115610c0b57610c0b611606565b03610c285760405162461bcd60e51b81526004016103fa90611a47565b600154604080516302734eab60e51b815290516002926001600160a01b031691634e69d5609160048083019260209291908290030181865afa158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c969190611a06565b1080610d0c57506001546040805163cbc84b2b60e01b8152905142926001600160a01b03169163cbc84b2b9160048083019260209291908290030181865afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a9190611a06565b115b610d695760405162461bcd60e51b815260206004820152602860248201527f4361726427732072657175696572656d656e74732061726520616c7265616479604482015267081c995858da195960c21b60648201526084016103fa565b600c80546001600160a01b0319169055610d84600182611111565b50565b600d81600a8110610d9757600080fd5b600a0201805460018201546002830154600384015460048501546005860180549597506001600160a01b03909416959294919360ff90911692916102e690611986565b610de26114d1565b6001600160a01b038116610e475760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fa565b610d8481611530565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc9190611a06565b10610ed95760405162461bcd60e51b81526004016103fa90611a1f565b600160085460ff166006811115610ef257610ef2611606565b03610f0f5760405162461bcd60e51b81526004016103fa90611a47565b6001600160a01b03821615610f365760405162461bcd60e51b81526004016103fa90611a88565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa158015610f80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa491906119e9565b6001600160a01b031603610ff25760405162461bcd60e51b81526020600482015260156024820152744e6f2062656e65666963696172792065786973747360581b60448201526064016103fa565b600c80546001600160a01b0319166001600160a01b0384161790556108d9600382611111565b600160065460ff16600381111561103157611031611606565b03611061576040517f02b6d5607dda5a506826190de087733781e56645575bc1cc47533d797c8f65b190600090a1565b600154604080516315968b8b60e21b815290517f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa1580156110ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ee91906119e9565b600c54604080516001600160a01b03938416815292909116602083015201610700565b60005b6111206001600a611aca565b8160ff1610801561114b57506000600d8260ff16600a811061114457611144611add565b600a020154115b1561127657600d8160ff16600a811061116657611166611add565b600a0201600d611177836001611b12565b60ff16600a811061118a5761118a611add565b8254600a919091029190910190815560018083015481830180546001600160a01b0319166001600160a01b039092169190911790556002808401549083015560038084015481840155600480850154908401805460ff90921693909260ff199092169184908111156111fe576111fe611606565b021790555060058181019061121590840182611b8f565b50600682810154828201805460ff90921692909160ff191690600190849081111561124257611242611606565b021790555060078281015490820155600880830154908201556009918201549101558061126e81611af3565b915050611114565b60028054600d90815560038054600e80546001600160a01b0319166001600160a01b03909216919091179055600454600f556005546010556006546011805460ff90921692909160ff19169060019084908111156112d6576112d6611606565b02179055506005818101906112ed90840182611b8f565b50600682810154828201805460ff90921692909160ff191690600190849081111561131a5761131a611606565b021790555060078281015490820155600880830154908201556009918201549101556040805161014081019091526002805482916000611359836119d0565b919050558152602001336001600160a01b0316815260200142815260200142621275006113869190611c69565b815260200184600381111561139d5761139d611606565b815260208101849052604001600181526000602080830182905260408084018390526060938401929092528351600290815590840151600380546001600160a01b0319166001600160a01b0390921691909117815591840151600455918301516005556080830151600680549192909160ff191690600190849081111561142657611426611606565b021790555060a0820151600582019061143f9082611c7c565b5060c08201518160060160006101000a81548160ff0219169083600681111561146a5761146a611606565b021790555060e08201516007820155610100820151600882015561012090910151600990910155600254604080519182523360208301527fdacded9ec488af103536650b25f32b6ee5ffcd9957954cef9198919b3d8abaf6910160405180910390a1505050565b336114da610b5a565b6001600160a01b031614610b195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fa565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061014001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600060038111156115c4576115c4611606565b815260606020820152604001600081526020016000815260200160008152602001600081525090565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b6004811061162c5761162c611606565b9052565b6000815180845260005b818110156116565760208185018101518683018201520161163a565b506000602082860101526020601f19601f83011685010191505092915050565b6007811061162c5761162c611606565b8a81526001600160a01b038a166020820152604081018990526060810188905260006101406116b8608084018a61161c565b8060a08401526116ca81840189611630565b9150506116da60c0830187611676565b8460e083015283610100830152826101208301529b9a5050505050505050505050565b60006020828403121561170f57600080fd5b8135801515811461171f57600080fd5b9392505050565b6001600160a01b0381168114610d8457600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261176257600080fd5b81356001600160401b038082111561177c5761177c61173b565b604051601f8301601f19908116603f011681019082821181831017156117a4576117a461173b565b816040528381528660208588010111156117bd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156117f057600080fd5b82356117fb81611726565b915060208301356001600160401b0381111561181657600080fd5b61182285828601611751565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561190657603f19898403018552815180518452878101516001600160a01b03168885015286810151878501526060808201519085015260808082015161014091906118a48288018261161c565b505060a08083015182828801526118bd83880182611630565b9250505060c0808301516118d382880182611676565b505060e0828101519086015261010080830151908601526101209182015191909401529386019390860190600101611853565b509098975050505050505050565b60006020828403121561192657600080fd5b813561171f81611726565b60006020828403121561194357600080fd5b81356001600160401b0381111561195957600080fd5b61196584828501611751565b949350505050565b60006020828403121561197f57600080fd5b5035919050565b600181811c9082168061199a57607f821691505b602082108103610b0157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119e2576119e26119ba565b5060010190565b6000602082840312156119fb57600080fd5b815161171f81611726565b600060208284031215611a1857600080fd5b5051919050565b6020808252600e908201526d10d85c99081a5cc81bdc195b995960921b604082015260600190565b60208082526021908201527f412070726f706f73616c20697320616c726561647920696e2070726f677265736040820152607360f81b606082015260800190565b60208082526022908201527f412062656e65666963696172792061646472657373206973206e656365737361604082015261727960f01b606082015260800190565b81810381811115610b5457610b546119ba565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611b0957611b096119ba565b60010192915050565b60ff8181168382160190811115610b5457610b546119ba565b601f821115611b7557600081815260208120601f850160051c81016020861015611b525750805b601f850160051c820191505b81811015611b7157828155600101611b5e565b5050505b505050565b600019600383901b1c191660019190911b1790565b818103611b9a575050565b611ba48254611986565b6001600160401b03811115611bbb57611bbb61173b565b611bcf81611bc98454611986565b84611b2b565b6000601f821160018114611bfd5760008315611beb5750848201545b611bf58482611b7a565b855550611c62565b600085815260209020601f19841690600086815260209020845b83811015611c375782860154825560019586019590910190602001611c17565b5085831015611c555781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b80820180821115610b5457610b546119ba565b81516001600160401b03811115611c9557611c9561173b565b611ca381611bc98454611986565b602080601f831160018114611cd25760008415611cc05750858301515b611cca8582611b7a565b865550611b71565b600085815260208120601f198616915b82811015611d0157888601518255948401946001909101908401611ce2565b5085821015611d1f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe1af855f8ecf9e2874e8d95b2f5b91f1afa7cea4cfac27e00fb165ebec0e671afa26469706673582212207a3411243fe115a8769ca6badaef07b7d7fe47fa63bab051587f82a3a19c8c7164736f6c63430008110033";

type GiftDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftDAO__factory extends ContractFactory {
  constructor(...args: GiftDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftDAO> {
    return super.deploy(_giftCard, overrides || {}) as Promise<GiftDAO>;
  }
  override getDeployTransaction(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_giftCard, overrides || {});
  }
  override attach(address: string): GiftDAO {
    return super.attach(address) as GiftDAO;
  }
  override connect(signer: Signer): GiftDAO__factory {
    return super.connect(signer) as GiftDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftDAOInterface {
    return new utils.Interface(_abi) as GiftDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftDAO {
    return new Contract(address, _abi, signerOrProvider) as GiftDAO;
  }
}
