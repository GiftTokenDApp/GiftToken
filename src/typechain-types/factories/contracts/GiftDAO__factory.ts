/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GiftDAO, GiftDAOInterface } from "../../contracts/GiftDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_giftCard",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "BeneficiaryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Funding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "ParticipantVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PropositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PropositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RequirementsOutpassed",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "changeBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createDeclaredBeneficiaryProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createOutpassedRequierementsProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closureDate",
        type: "uint256",
      },
      {
        internalType: "enum CardProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CardProposalResult",
        name: "proposalResult",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "approvedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refusedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closedDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "determinateProposalResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "creationDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closureDate",
            type: "uint256",
          },
          {
            internalType: "enum CardProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "enum CardProposalResult",
            name: "proposalResult",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "approvedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refusedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closedDate",
            type: "uint256",
          },
        ],
        internalType: "struct Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fc338038062001fc38339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b611ecc80620000f76000396000f3fe60806040526004361061009b5760003560e01c80632b49d425146100e85780634b9f5c981461011c5780635a1201a41461013e578063622d21311461015357806362564c4814610173578063715018a6146101955780638d337b81146101aa5780638da5cb5b146101d85780639e0070c3146101fa578063d118b9191461021a578063f2fde38b1461023a578063fbf0cd3e1461025a576100c9565b366100c957600080516020611e7783398151915233346040516100bf929190611720565b60405180910390a1005b600080516020611e7783398151915233346040516100bf929190611720565b3480156100f457600080fd5b506100fd61027a565b6040516101139a999897969594939291906117b9565b60405180910390f35b34801561012857600080fd5b5061013c610137366004611830565b610350565b005b34801561014a57600080fd5b5061013c61056a565b34801561015f57600080fd5b5061013c61016e366004611910565b6107a3565b34801561017f57600080fd5b5061018861099e565b604051610113919061195f565b3480156101a157600080fd5b5061013c610bc9565b3480156101b657600080fd5b506101ca6101c5366004611a47565b610bdd565b604051908152602001610113565b3480156101e457600080fd5b506101ed610c1c565b6040516101139190611a64565b34801561020657600080fd5b5061013c610215366004611a78565b610c2b565b34801561022657600080fd5b50600c546101ed906001600160a01b031681565b34801561024657600080fd5b5061013c610255366004611a47565b610e49565b34801561026657600080fd5b5061013c610275366004611910565b610ebf565b600280546003546004546005546006546007805495966001600160a01b03909516959394929360ff90921692916102b090611ab4565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc90611ab4565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b50505050600683015460078401546008850154600990950154939460ff909216939092508a565b600160085460ff16600681111561036957610369611739565b146103cd5760405162461bcd60e51b815260206004820152602960248201527f43757272656e742070726f706f73616c20737461747573206e6f7420616c6c6f604482015268777320766f74696e6760b81b60648201526084015b60405180910390fd5b60006103d833610bdd565b1461041d5760405162461bcd60e51b8152602060048201526015602482015274596f7520616c7265616479206861766520766f746560581b60448201526064016103c4565b600060085460ff16600681111561043657610436611739565b14806104585750600160085460ff16600681111561045657610456611739565b145b61049f5760405162461bcd60e51b8152602060048201526018602482015277159bdd1a5b99c81cd95cdcda5bdb881a185cc8195b99195960421b60448201526064016103c4565b806104ab5760026104ae565b60015b33600090815260716020908152604080832060028054855292529091208054909160ff199091169060019084908111156104ea576104ea611739565b0217905550801561050f576009805490600061050583611afe565b9190505550610525565b600a805490600061051f83611afe565b91905055505b6002546040805191825233602083015282151582820152517f8aa814e73bd4d29db7480c805f624cd85fec5020883088fd2ac24f322eef4b9f9181900360600190a150565b60055442106105bb5760405162461bcd60e51b815260206004820181905260248201527f43757272656e742070726f706f73616c2063616e277420626520636c6f73656460448201526064016103c4565b42600b55600a5460095411156105e557600880546002919060ff19166001835b0217905550610704565b600a54600954101561060557600880546004919060ff19166001836105db565b6000610681600160009054906101000a90046001600160a01b03166001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c59190611b17565b600281111561069257610692611739565b905060018160028111156106a8576106a8611739565b036106c757600880546003919060ff19166001835b0217905550610702565b60018160028111156106db576106db611739565b036106f457600880546005919060ff19166001836106bd565b6008805460ff191660061790555b505b600260085460ff16600681111561071d5761071d611739565b148061073f5750600360085460ff16600681111561073d5761073d611739565b145b1561074c5761074c6110b1565b6002546008547fd1a300116d659d3a9ee22d14d85b48f34f2c3bb465171cdf21b99d3b539e38e5919060ff16600681111561078957610789611739565b6040805192835260208301919091520160405180910390a1565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190611b34565b1061082c5760405162461bcd60e51b81526004016103c490611b4d565b600160085460ff16600681111561084557610845611739565b036108625760405162461bcd60e51b81526004016103c490611b75565b816001600160a01b0381166108895760405162461bcd60e51b81526004016103c490611bb6565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190611b17565b6001600160a01b0316146109735760405162461bcd60e51b815260206004820152603f60248201527f5468697320666f6e6374696f6e2063616e206f6e6c792062652063616c6c656460448201527f207768656e206e6f2062656e65666963696172792069732063686f6f73656e0060648201526084016103c4565b600c80546001600160a01b0319166001600160a01b038516179055610999600283611244565b505050565b60408051600a808252610160820190925260609160009190816020015b6109c36116b3565b8152602001906001900390816109bb57905050905060005b6109e76001600a611bf8565b8160ff16108015610a1257506000600d8260ff16600a8110610a0b57610a0b611c0b565b600a020154115b15610bc3576000600d8260ff16600a8110610a2f57610a2f611c0b565b6040805161014081018252600a92909202929092018054825260018101546001600160a01b0316602083015260028101549282019290925260038083015460608301526004830154919291608084019160ff90911690811115610a9457610a94611739565b6003811115610aa557610aa5611739565b8152602001600582018054610ab990611ab4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae590611ab4565b8015610b325780601f10610b0757610100808354040283529160200191610b32565b820191906000526020600020905b815481529060010190602001808311610b1557829003601f168201915b505050918352505060068281015460209092019160ff1690811115610b5957610b59611739565b6006811115610b6a57610b6a611739565b81526020016007820154815260200160088201548152602001600982015481525050905080838360ff1681518110610ba457610ba4611c0b565b60200260200101819052508180610bba90611c21565b925050506109db565b50919050565b610bd1611604565b610bdb6000611663565b565b6001600160a01b0381166000908152607160209081526040808320600280548552925282205460ff1690811115610c1657610c16611739565b92915050565b6000546001600160a01b031690565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c979190611b34565b10610cb45760405162461bcd60e51b81526004016103c490611b4d565b600160085460ff166006811115610ccd57610ccd611739565b03610cea5760405162461bcd60e51b81526004016103c490611b75565b600154604080516302734eab60e51b815290516002926001600160a01b031691634e69d5609160048083019260209291908290030181865afa158015610d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d589190611b34565b1080610dce57506001546040805163cbc84b2b60e01b8152905142926001600160a01b03169163cbc84b2b9160048083019260209291908290030181865afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190611b34565b115b610e2b5760405162461bcd60e51b815260206004820152602860248201527f4361726427732072657175696572656d656e74732061726520616c7265616479604482015267081c995858da195960c21b60648201526084016103c4565b600c80546001600160a01b0319169055610e46600182611244565b50565b610e51611604565b6001600160a01b038116610eb65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c4565b610e4681611663565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2b9190611b34565b10610f485760405162461bcd60e51b81526004016103c490611b4d565b600160085460ff166006811115610f6157610f61611739565b03610f7e5760405162461bcd60e51b81526004016103c490611b75565b816001600160a01b038116610fa55760405162461bcd60e51b81526004016103c490611bb6565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110139190611b17565b6001600160a01b03160361108b5760405162461bcd60e51b815260206004820152603960248201527f4e65656420612070726576696f75732063686f6f73656e2062656e656669636960448201527830b93c903a379031b0b636103a3434b9903337b731ba34b7b760391b60648201526084016103c4565b600c80546001600160a01b0319166001600160a01b038516179055610999600383611244565b600160065460ff1660038111156110ca576110ca611739565b0361115d576040517f02b6d5607dda5a506826190de087733781e56645575bc1cc47533d797c8f65b190600090a16001546040516380c438f360e01b81526001600160a01b03909116906380c438f39061112990600390600401611c40565b600060405180830381600087803b15801561114357600080fd5b505af1158015611157573d6000803e3d6000fd5b50505050565b600154604080516315968b8b60e21b815290517f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190611b17565b600c54604080516001600160a01b0393841681529290911660208301520160405180910390a1600154600c54604051637cb8d8c960e11b81526001600160a01b039283169263f971b1929261112992911690600401611a64565b60005b6112536001600a611bf8565b8160ff1610801561127e57506000600d8260ff16600a811061127757611277611c0b565b600a020154115b156113a957600d8160ff16600a811061129957611299611c0b565b600a0201600d6112aa836001611c5a565b60ff16600a81106112bd576112bd611c0b565b8254600a919091029190910190815560018083015481830180546001600160a01b0319166001600160a01b039092169190911790556002808401549083015560038084015481840155600480850154908401805460ff90921693909260ff1990921691849081111561133157611331611739565b021790555060058181019061134890840182611cd6565b50600682810154828201805460ff90921692909160ff191690600190849081111561137557611375611739565b02179055506007828101549082015560088083015490820155600991820154910155806113a181611c21565b915050611247565b60028054600d90815560038054600e80546001600160a01b0319166001600160a01b03909216919091179055600454600f556005546010556006546011805460ff90921692909160ff191690600190849081111561140957611409611739565b021790555060058181019061142090840182611cd6565b50600682810154828201805460ff90921692909160ff191690600190849081111561144d5761144d611739565b02179055506007828101549082015560088083015490820155600991820154910155604080516101408101909152600280548291600061148c83611afe565b919050558152602001336001600160a01b0316815260200142815260200142621275006114b99190611db0565b81526020018460038111156114d0576114d0611739565b815260208101849052604001600181526000602080830182905260408084018390526060938401929092528351600290815590840151600380546001600160a01b0319166001600160a01b0390921691909117815591840151600455918301516005556080830151600680549192909160ff191690600190849081111561155957611559611739565b021790555060a082015160058201906115729082611dc3565b5060c08201518160060160006101000a81548160ff0219169083600681111561159d5761159d611739565b021790555060e08201516007820155610100820151600882015561012090910151600990910155600254604080519182523360208301527fdacded9ec488af103536650b25f32b6ee5ffcd9957954cef9198919b3d8abaf6910160405180910390a1505050565b3361160d610c1c565b6001600160a01b031614610bdb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061014001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600060038111156116f7576116f7611739565b815260606020820152604001600081526020016000815260200160008152602001600081525090565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b6004811061175f5761175f611739565b9052565b6000815180845260005b818110156117895760208185018101518683018201520161176d565b506000602082860101526020601f19601f83011685010191505092915050565b6007811061175f5761175f611739565b8a81526001600160a01b038a166020820152604081018990526060810188905260006101406117eb608084018a61174f565b8060a08401526117fd81840189611763565b91505061180d60c08301876117a9565b8460e083015283610100830152826101208301529b9a5050505050505050505050565b60006020828403121561184257600080fd5b8135801515811461185257600080fd5b9392505050565b6001600160a01b0381168114610e4657600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261189557600080fd5b81356001600160401b03808211156118af576118af61186e565b604051601f8301601f19908116603f011681019082821181831017156118d7576118d761186e565b816040528381528660208588010111156118f057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561192357600080fd5b823561192e81611859565b915060208301356001600160401b0381111561194957600080fd5b61195585828601611884565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611a3957603f19898403018552815180518452878101516001600160a01b03168885015286810151878501526060808201519085015260808082015161014091906119d78288018261174f565b505060a08083015182828801526119f083880182611763565b9250505060c080830151611a06828801826117a9565b505060e0828101519086015261010080830151908601526101209182015191909401529386019390860190600101611986565b509098975050505050505050565b600060208284031215611a5957600080fd5b813561185281611859565b6001600160a01b0391909116815260200190565b600060208284031215611a8a57600080fd5b81356001600160401b03811115611aa057600080fd5b611aac84828501611884565b949350505050565b600181811c90821680611ac857607f821691505b602082108103610bc357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611b1057611b10611ae8565b5060010190565b600060208284031215611b2957600080fd5b815161185281611859565b600060208284031215611b4657600080fd5b5051919050565b6020808252600e908201526d10d85c99081a5cc81bdc195b995960921b604082015260600190565b60208082526021908201527f412070726f706f73616c20697320616c726561647920696e2070726f677265736040820152607360f81b606082015260800190565b60208082526022908201527f412062656e65666963696172792061646472657373206973206e656365737361604082015261727960f01b606082015260800190565b81810381811115610c1657610c16611ae8565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611c3757611c37611ae8565b60010192915050565b6020810160068310611c5457611c54611739565b91905290565b60ff8181168382160190811115610c1657610c16611ae8565b601f82111561099957600081815260208120601f850160051c81016020861015611c9a5750805b601f850160051c820191505b81811015611cb957828155600101611ca6565b505050505050565b600019600383901b1c191660019190911b1790565b818103611ce1575050565b611ceb8254611ab4565b6001600160401b03811115611d0257611d0261186e565b611d1681611d108454611ab4565b84611c73565b6000601f821160018114611d445760008315611d325750848201545b611d3c8482611cc1565b855550611da9565b600085815260209020601f19841690600086815260209020845b83811015611d7e5782860154825560019586019590910190602001611d5e565b5085831015611d9c5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b80820180821115610c1657610c16611ae8565b81516001600160401b03811115611ddc57611ddc61186e565b611dea81611d108454611ab4565b602080601f831160018114611e195760008415611e075750858301515b611e118582611cc1565b865550611cb9565b600085815260208120601f198616915b82811015611e4857888601518255948401946001909101908401611e29565b5085821015611e665787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe1af855f8ecf9e2874e8d95b2f5b91f1afa7cea4cfac27e00fb165ebec0e671afa2646970667358221220a97e60fe54569f2cc7dceb2baad0f9fce5ab4656d5de56469c818bc7a441710a64736f6c63430008110033";

type GiftDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftDAO__factory extends ContractFactory {
  constructor(...args: GiftDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftDAO> {
    return super.deploy(_giftCard, overrides || {}) as Promise<GiftDAO>;
  }
  override getDeployTransaction(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_giftCard, overrides || {});
  }
  override attach(address: string): GiftDAO {
    return super.attach(address) as GiftDAO;
  }
  override connect(signer: Signer): GiftDAO__factory {
    return super.connect(signer) as GiftDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftDAOInterface {
    return new utils.Interface(_abi) as GiftDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftDAO {
    return new Contract(address, _abi, signerOrProvider) as GiftDAO;
  }
}
