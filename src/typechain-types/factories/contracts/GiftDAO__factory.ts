/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GiftDAO, GiftDAOInterface } from "../../contracts/GiftDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_giftCard",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "BeneficiaryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Funding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "ParticipantVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PropositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PropositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RequirementsOutpassed",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "changeBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createDeclaredBeneficiaryProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createOutpassedRequierementsProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closureDate",
        type: "uint256",
      },
      {
        internalType: "enum CardProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CardProposalResult",
        name: "proposalResult",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "approvedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refusedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closedDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "determinateProposalResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "creationDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closureDate",
            type: "uint256",
          },
          {
            internalType: "enum CardProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "enum CardProposalResult",
            name: "proposalResult",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "approvedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refusedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closedDate",
            type: "uint256",
          },
        ],
        internalType: "struct Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ef338038062001ef38339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b611dfc80620000f76000396000f3fe60806040526004361061009b5760003560e01c80632b49d425146100e85780634b9f5c981461011c5780635a1201a41461013e578063622d21311461015357806362564c4814610173578063715018a6146101955780638d337b81146101aa5780638da5cb5b146101d85780639e0070c3146101fa578063d118b9191461021a578063f2fde38b1461023a578063fbf0cd3e1461025a576100c9565b366100c957600080516020611da783398151915233346040516100bf929190611650565b60405180910390a1005b600080516020611da783398151915233346040516100bf929190611650565b3480156100f457600080fd5b506100fd61027a565b6040516101139a999897969594939291906116e9565b60405180910390f35b34801561012857600080fd5b5061013c610137366004611760565b610350565b005b34801561014a57600080fd5b5061013c610498565b34801561015f57600080fd5b5061013c61016e366004611840565b6106d3565b34801561017f57600080fd5b506101886108ce565b604051610113919061188f565b3480156101a157600080fd5b5061013c610af9565b3480156101b657600080fd5b506101ca6101c5366004611977565b610b0d565b604051908152602001610113565b3480156101e457600080fd5b506101ed610b4c565b6040516101139190611994565b34801561020657600080fd5b5061013c6102153660046119a8565b610b5b565b34801561022657600080fd5b50600c546101ed906001600160a01b031681565b34801561024657600080fd5b5061013c610255366004611977565b610d79565b34801561026657600080fd5b5061013c610275366004611840565b610def565b600280546003546004546005546006546007805495966001600160a01b03909516959394929360ff90921692916102b0906119e4565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc906119e4565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b50505050600683015460078401546008850154600990950154939460ff909216939092508a565b600160085460ff16600681111561036957610369611669565b146103cd5760405162461bcd60e51b815260206004820152602960248201527f43757272656e742070726f706f73616c20737461747573206e6f7420616c6c6f604482015268777320766f74696e6760b81b60648201526084015b60405180910390fd5b60006103d833610b0d565b1461041d5760405162461bcd60e51b8152602060048201526015602482015274596f7520616c7265616479206861766520766f746560581b60448201526064016103c4565b801561043d576009805490600061043383611a2e565b9190505550610453565b600a805490600061044d83611a2e565b91905055505b6002546040805191825233602083015282151582820152517f8aa814e73bd4d29db7480c805f624cd85fec5020883088fd2ac24f322eef4b9f9181900360600190a150565b60055442106104e95760405162461bcd60e51b815260206004820181905260248201527f43757272656e742070726f706f73616c2063616e277420626520636c6f73656460448201526064016103c4565b42600b55600a54600954111561051a5760025b60085460ff16600681111561051357610513611669565b5050610634565b600a54600954101561052d5760046104fc565b60006105a9600160009054906101000a90046001600160a01b03166001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c59190611a47565b60028111156105ba576105ba611669565b905060018160028111156105d0576105d0611669565b036105f65760035b60085460ff1660068111156105ef576105ef611669565b5050610632565b600181600281111561060a5761060a611669565b036106165760056105d8565b600660085460ff16600681111561062f5761062f611669565b50505b505b600260085460ff16600681111561064d5761064d611669565b148061066f5750600360085460ff16600681111561066d5761066d611669565b145b1561067c5761067c610fe1565b6002546008547fd1a300116d659d3a9ee22d14d85b48f34f2c3bb465171cdf21b99d3b539e38e5919060ff1660068111156106b9576106b9611669565b6040805192835260208301919091520160405180910390a1565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f9190611a64565b1061075c5760405162461bcd60e51b81526004016103c490611a7d565b600160085460ff16600681111561077557610775611669565b036107925760405162461bcd60e51b81526004016103c490611aa5565b816001600160a01b0381166107b95760405162461bcd60e51b81526004016103c490611ae6565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa158015610803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108279190611a47565b6001600160a01b0316146108a35760405162461bcd60e51b815260206004820152603f60248201527f5468697320666f6e6374696f6e2063616e206f6e6c792062652063616c6c656460448201527f207768656e206e6f2062656e65666963696172792069732063686f6f73656e0060648201526084016103c4565b600c80546001600160a01b0319166001600160a01b0385161790556108c9600283611174565b505050565b60408051600a808252610160820190925260609160009190816020015b6108f36115e3565b8152602001906001900390816108eb57905050905060005b6109176001600a611b28565b8160ff1610801561094257506000600d8260ff16600a811061093b5761093b611b3b565b600a020154115b15610af3576000600d8260ff16600a811061095f5761095f611b3b565b6040805161014081018252600a92909202929092018054825260018101546001600160a01b0316602083015260028101549282019290925260038083015460608301526004830154919291608084019160ff909116908111156109c4576109c4611669565b60038111156109d5576109d5611669565b81526020016005820180546109e9906119e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a15906119e4565b8015610a625780601f10610a3757610100808354040283529160200191610a62565b820191906000526020600020905b815481529060010190602001808311610a4557829003601f168201915b505050918352505060068281015460209092019160ff1690811115610a8957610a89611669565b6006811115610a9a57610a9a611669565b81526020016007820154815260200160088201548152602001600982015481525050905080838360ff1681518110610ad457610ad4611b3b565b60200260200101819052508180610aea90611b51565b9250505061090b565b50919050565b610b01611534565b610b0b6000611593565b565b6001600160a01b0381166000908152607160209081526040808320600280548552925282205460ff1690811115610b4657610b46611669565b92915050565b6000546001600160a01b031690565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc79190611a64565b10610be45760405162461bcd60e51b81526004016103c490611a7d565b600160085460ff166006811115610bfd57610bfd611669565b03610c1a5760405162461bcd60e51b81526004016103c490611aa5565b600154604080516302734eab60e51b815290516002926001600160a01b031691634e69d5609160048083019260209291908290030181865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c889190611a64565b1080610cfe57506001546040805163cbc84b2b60e01b8152905142926001600160a01b03169163cbc84b2b9160048083019260209291908290030181865afa158015610cd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfc9190611a64565b115b610d5b5760405162461bcd60e51b815260206004820152602860248201527f4361726427732072657175696572656d656e74732061726520616c7265616479604482015267081c995858da195960c21b60648201526084016103c4565b600c80546001600160a01b0319169055610d76600182611174565b50565b610d81611534565b6001600160a01b038116610de65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c4565b610d7681611593565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610e37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5b9190611a64565b10610e785760405162461bcd60e51b81526004016103c490611a7d565b600160085460ff166006811115610e9157610e91611669565b03610eae5760405162461bcd60e51b81526004016103c490611aa5565b816001600160a01b038116610ed55760405162461bcd60e51b81526004016103c490611ae6565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190611a47565b6001600160a01b031603610fbb5760405162461bcd60e51b815260206004820152603960248201527f4e65656420612070726576696f75732063686f6f73656e2062656e656669636960448201527830b93c903a379031b0b636103a3434b9903337b731ba34b7b760391b60648201526084016103c4565b600c80546001600160a01b0319166001600160a01b0385161790556108c9600383611174565b600160065460ff166003811115610ffa57610ffa611669565b0361108d576040517f02b6d5607dda5a506826190de087733781e56645575bc1cc47533d797c8f65b190600090a16001546040516380c438f360e01b81526001600160a01b03909116906380c438f39061105990600390600401611b70565b600060405180830381600087803b15801561107357600080fd5b505af1158015611087573d6000803e3d6000fd5b50505050565b600154604080516315968b8b60e21b815290517f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111a9190611a47565b600c54604080516001600160a01b0393841681529290911660208301520160405180910390a1600154600c54604051637cb8d8c960e11b81526001600160a01b039283169263f971b1929261105992911690600401611994565b60005b6111836001600a611b28565b8160ff161080156111ae57506000600d8260ff16600a81106111a7576111a7611b3b565b600a020154115b156112d957600d8160ff16600a81106111c9576111c9611b3b565b600a0201600d6111da836001611b8a565b60ff16600a81106111ed576111ed611b3b565b8254600a919091029190910190815560018083015481830180546001600160a01b0319166001600160a01b039092169190911790556002808401549083015560038084015481840155600480850154908401805460ff90921693909260ff1990921691849081111561126157611261611669565b021790555060058181019061127890840182611c06565b50600682810154828201805460ff90921692909160ff19169060019084908111156112a5576112a5611669565b02179055506007828101549082015560088083015490820155600991820154910155806112d181611b51565b915050611177565b60028054600d90815560038054600e80546001600160a01b0319166001600160a01b03909216919091179055600454600f556005546010556006546011805460ff90921692909160ff191690600190849081111561133957611339611669565b021790555060058181019061135090840182611c06565b50600682810154828201805460ff90921692909160ff191690600190849081111561137d5761137d611669565b0217905550600782810154908201556008808301549082015560099182015491015560408051610140810190915260028054829160006113bc83611a2e565b919050558152602001336001600160a01b0316815260200142815260200142621275006113e99190611ce0565b815260200184600381111561140057611400611669565b815260208101849052604001600181526000602080830182905260408084018390526060938401929092528351600290815590840151600380546001600160a01b0319166001600160a01b0390921691909117815591840151600455918301516005556080830151600680549192909160ff191690600190849081111561148957611489611669565b021790555060a082015160058201906114a29082611cf3565b5060c08201518160060160006101000a81548160ff021916908360068111156114cd576114cd611669565b021790555060e08201516007820155610100820151600882015561012090910151600990910155600254604080519182523360208301527fdacded9ec488af103536650b25f32b6ee5ffcd9957954cef9198919b3d8abaf6910160405180910390a1505050565b3361153d610b4c565b6001600160a01b031614610b0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061014001604052806000815260200160006001600160a01b0316815260200160008152602001600081526020016000600381111561162757611627611669565b815260606020820152604001600081526020016000815260200160008152602001600081525090565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b6004811061168f5761168f611669565b9052565b6000815180845260005b818110156116b95760208185018101518683018201520161169d565b506000602082860101526020601f19601f83011685010191505092915050565b6007811061168f5761168f611669565b8a81526001600160a01b038a1660208201526040810189905260608101889052600061014061171b608084018a61167f565b8060a084015261172d81840189611693565b91505061173d60c08301876116d9565b8460e083015283610100830152826101208301529b9a5050505050505050505050565b60006020828403121561177257600080fd5b8135801515811461178257600080fd5b9392505050565b6001600160a01b0381168114610d7657600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117c557600080fd5b81356001600160401b03808211156117df576117df61179e565b604051601f8301601f19908116603f011681019082821181831017156118075761180761179e565b8160405283815286602085880101111561182057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561185357600080fd5b823561185e81611789565b915060208301356001600160401b0381111561187957600080fd5b611885858286016117b4565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561196957603f19898403018552815180518452878101516001600160a01b03168885015286810151878501526060808201519085015260808082015161014091906119078288018261167f565b505060a080830151828288015261192083880182611693565b9250505060c080830151611936828801826116d9565b505060e08281015190860152610100808301519086015261012091820151919094015293860193908601906001016118b6565b509098975050505050505050565b60006020828403121561198957600080fd5b813561178281611789565b6001600160a01b0391909116815260200190565b6000602082840312156119ba57600080fd5b81356001600160401b038111156119d057600080fd5b6119dc848285016117b4565b949350505050565b600181811c908216806119f857607f821691505b602082108103610af357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a4057611a40611a18565b5060010190565b600060208284031215611a5957600080fd5b815161178281611789565b600060208284031215611a7657600080fd5b5051919050565b6020808252600e908201526d10d85c99081a5cc81bdc195b995960921b604082015260600190565b60208082526021908201527f412070726f706f73616c20697320616c726561647920696e2070726f677265736040820152607360f81b606082015260800190565b60208082526022908201527f412062656e65666963696172792061646472657373206973206e656365737361604082015261727960f01b606082015260800190565b81810381811115610b4657610b46611a18565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611b6757611b67611a18565b60010192915050565b6020810160068310611b8457611b84611669565b91905290565b60ff8181168382160190811115610b4657610b46611a18565b601f8211156108c957600081815260208120601f850160051c81016020861015611bca5750805b601f850160051c820191505b81811015611be957828155600101611bd6565b505050505050565b600019600383901b1c191660019190911b1790565b818103611c11575050565b611c1b82546119e4565b6001600160401b03811115611c3257611c3261179e565b611c4681611c4084546119e4565b84611ba3565b6000601f821160018114611c745760008315611c625750848201545b611c6c8482611bf1565b855550611cd9565b600085815260209020601f19841690600086815260209020845b83811015611cae5782860154825560019586019590910190602001611c8e565b5085831015611ccc5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b80820180821115610b4657610b46611a18565b81516001600160401b03811115611d0c57611d0c61179e565b611d1a81611c4084546119e4565b602080601f831160018114611d495760008415611d375750858301515b611d418582611bf1565b865550611be9565b600085815260208120601f198616915b82811015611d7857888601518255948401946001909101908401611d59565b5085821015611d965787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe1af855f8ecf9e2874e8d95b2f5b91f1afa7cea4cfac27e00fb165ebec0e671afa2646970667358221220c1be5d33d2a4dab764d5e18e19b2d89e3a1afdeb05b3607fca0b00e0f5daa07064736f6c63430008110033";

type GiftDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftDAO__factory extends ContractFactory {
  constructor(...args: GiftDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftDAO> {
    return super.deploy(_giftCard, overrides || {}) as Promise<GiftDAO>;
  }
  override getDeployTransaction(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_giftCard, overrides || {});
  }
  override attach(address: string): GiftDAO {
    return super.attach(address) as GiftDAO;
  }
  override connect(signer: Signer): GiftDAO__factory {
    return super.connect(signer) as GiftDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftDAOInterface {
    return new utils.Interface(_abi) as GiftDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftDAO {
    return new Contract(address, _abi, signerOrProvider) as GiftDAO;
  }
}
