/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { GiftDAO, GiftDAOInterface } from "../../contracts/GiftDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_giftCard",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "BeneficiaryChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Funding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "ParticipantVoted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PropositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "PropositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RequirementsOutpassed",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "changeBeneficiary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createDeclaredBeneficiaryProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createOutpassedRequierementsProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creationDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closureDate",
        type: "uint256",
      },
      {
        internalType: "enum CardProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "enum CardProposalResult",
        name: "proposalResult",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "approvedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "refusedCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closedDate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "determinateProposalResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "creationDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closureDate",
            type: "uint256",
          },
          {
            internalType: "enum CardProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "enum CardProposalResult",
            name: "proposalResult",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "approvedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "refusedCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "closedDate",
            type: "uint256",
          },
        ],
        internalType: "struct Proposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "getVote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalBeneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isApproved",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ea238038062001ea28339810160408190526200003491620000b5565b6200003f3362000065565b600180546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b611dab80620000f76000396000f3fe60806040526004361061009b5760003560e01c80632b49d425146100e85780634b9f5c981461011c5780635a1201a41461013e578063622d21311461015357806362564c4814610173578063715018a6146101955780638d337b81146101aa5780638da5cb5b146101d85780639e0070c3146101fa578063d118b9191461021a578063f2fde38b1461023a578063fbf0cd3e1461025a576100c9565b366100c957600080516020611d5683398151915233346040516100bf9291906115fe565b60405180910390a1005b600080516020611d5683398151915233346040516100bf9291906115fe565b3480156100f457600080fd5b506100fd61027a565b6040516101139a99989796959493929190611697565b60405180910390f35b34801561012857600080fd5b5061013c61013736600461170e565b610350565b005b34801561014a57600080fd5b5061013c610498565b34801561015f57600080fd5b5061013c61016e3660046117ee565b6106d3565b34801561017f57600080fd5b506101886108a6565b604051610113919061183d565b3480156101a157600080fd5b5061013c610ad1565b3480156101b657600080fd5b506101ca6101c5366004611925565b610ae5565b604051908152602001610113565b3480156101e457600080fd5b506101ed610b24565b6040516101139190611942565b34801561020657600080fd5b5061013c610215366004611956565b610b33565b34801561022657600080fd5b50600c546101ed906001600160a01b031681565b34801561024657600080fd5b5061013c610255366004611925565b610d51565b34801561026657600080fd5b5061013c6102753660046117ee565b610dc7565b600280546003546004546005546006546007805495966001600160a01b03909516959394929360ff90921692916102b090611992565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc90611992565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b50505050600683015460078401546008850154600990950154939460ff909216939092508a565b600160085460ff16600681111561036957610369611617565b146103cd5760405162461bcd60e51b815260206004820152602960248201527f43757272656e742070726f706f73616c20737461747573206e6f7420616c6c6f604482015268777320766f74696e6760b81b60648201526084015b60405180910390fd5b60006103d833610ae5565b1461041d5760405162461bcd60e51b8152602060048201526015602482015274596f7520616c7265616479206861766520766f746560581b60448201526064016103c4565b801561043d5760098054906000610433836119dc565b9190505550610453565b600a805490600061044d836119dc565b91905055505b6002546040805191825233602083015282151582820152517f8aa814e73bd4d29db7480c805f624cd85fec5020883088fd2ac24f322eef4b9f9181900360600190a150565b60055442106104e95760405162461bcd60e51b815260206004820181905260248201527f43757272656e742070726f706f73616c2063616e277420626520636c6f73656460448201526064016103c4565b42600b55600a54600954111561051a5760025b60085460ff16600681111561051357610513611617565b5050610634565b600a54600954101561052d5760046104fc565b60006105a9600160009054906101000a90046001600160a01b03166001600160a01b0316630ee2cb106040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c591906119f5565b60028111156105ba576105ba611617565b905060018160028111156105d0576105d0611617565b036105f65760035b60085460ff1660068111156105ef576105ef611617565b5050610632565b600181600281111561060a5761060a611617565b036106165760056105d8565b600660085460ff16600681111561062f5761062f611617565b50505b505b600260085460ff16600681111561064d5761064d611617565b148061066f5750600360085460ff16600681111561066d5761066d611617565b145b1561067c5761067c610f8f565b6002546008547fd1a300116d659d3a9ee22d14d85b48f34f2c3bb465171cdf21b99d3b539e38e5919060ff1660068111156106b9576106b9611617565b6040805192835260208301919091520160405180910390a1565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f9190611a12565b1061075c5760405162461bcd60e51b81526004016103c490611a2b565b600160085460ff16600681111561077557610775611617565b036107925760405162461bcd60e51b81526004016103c490611a53565b6001600160a01b038216156107b95760405162461bcd60e51b81526004016103c490611a94565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa158015610803573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082791906119f5565b6001600160a01b03161461087c5760405162461bcd60e51b815260206004820152601c60248201527b412062656e656669636961727920616c72656164792065786973747360201b60448201526064016103c4565b600c80546001600160a01b0319166001600160a01b0384161790556108a2600282611122565b5050565b60408051600a808252610160820190925260609160009190816020015b6108cb611591565b8152602001906001900390816108c357905050905060005b6108ef6001600a611ad6565b8160ff1610801561091a57506000600d8260ff16600a811061091357610913611ae9565b600a020154115b15610acb576000600d8260ff16600a811061093757610937611ae9565b6040805161014081018252600a92909202929092018054825260018101546001600160a01b0316602083015260028101549282019290925260038083015460608301526004830154919291608084019160ff9091169081111561099c5761099c611617565b60038111156109ad576109ad611617565b81526020016005820180546109c190611992565b80601f01602080910402602001604051908101604052809291908181526020018280546109ed90611992565b8015610a3a5780601f10610a0f57610100808354040283529160200191610a3a565b820191906000526020600020905b815481529060010190602001808311610a1d57829003601f168201915b505050918352505060068281015460209092019160ff1690811115610a6157610a61611617565b6006811115610a7257610a72611617565b81526020016007820154815260200160088201548152602001600982015481525050905080838360ff1681518110610aac57610aac611ae9565b60200260200101819052508180610ac290611aff565b925050506108e3565b50919050565b610ad96114e2565b610ae36000611541565b565b6001600160a01b0381166000908152607160209081526040808320600280548552925282205460ff1690811115610b1e57610b1e611617565b92915050565b6000546001600160a01b031690565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611a12565b10610bbc5760405162461bcd60e51b81526004016103c490611a2b565b600160085460ff166006811115610bd557610bd5611617565b03610bf25760405162461bcd60e51b81526004016103c490611a53565b600154604080516302734eab60e51b815290516002926001600160a01b031691634e69d5609160048083019260209291908290030181865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190611a12565b1080610cd657506001546040805163cbc84b2b60e01b8152905142926001600160a01b03169163cbc84b2b9160048083019260209291908290030181865afa158015610cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd49190611a12565b115b610d335760405162461bcd60e51b815260206004820152602860248201527f4361726427732072657175696572656d656e74732061726520616c7265616479604482015267081c995858da195960c21b60648201526084016103c4565b600c80546001600160a01b0319169055610d4e600182611122565b50565b610d596114e2565b6001600160a01b038116610dbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c4565b610d4e81611541565b600154604080516302734eab60e51b815290516004926001600160a01b031691634e69d560918185019160209190819003860181865afa158015610e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e339190611a12565b10610e505760405162461bcd60e51b81526004016103c490611a2b565b600160085460ff166006811115610e6957610e69611617565b03610e865760405162461bcd60e51b81526004016103c490611a53565b6001600160a01b03821615610ead5760405162461bcd60e51b81526004016103c490611a94565b600154604080516315968b8b60e21b815290516000926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b91906119f5565b6001600160a01b031603610f695760405162461bcd60e51b81526020600482015260156024820152744e6f2062656e65666963696172792065786973747360581b60448201526064016103c4565b600c80546001600160a01b0319166001600160a01b0384161790556108a2600382611122565b600160065460ff166003811115610fa857610fa8611617565b0361103b576040517f02b6d5607dda5a506826190de087733781e56645575bc1cc47533d797c8f65b190600090a16001546040516380c438f360e01b81526001600160a01b03909116906380c438f39061100790600390600401611b1e565b600060405180830381600087803b15801561102157600080fd5b505af1158015611035573d6000803e3d6000fd5b50505050565b600154604080516315968b8b60e21b815290517f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d926001600160a01b03169163565a2e2c9160048083019260209291908290030181865afa1580156110a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c891906119f5565b600c54604080516001600160a01b0393841681529290911660208301520160405180910390a1600154600c54604051637cb8d8c960e11b81526001600160a01b039283169263f971b1929261100792911690600401611942565b60005b6111316001600a611ad6565b8160ff1610801561115c57506000600d8260ff16600a811061115557611155611ae9565b600a020154115b1561128757600d8160ff16600a811061117757611177611ae9565b600a0201600d611188836001611b38565b60ff16600a811061119b5761119b611ae9565b8254600a919091029190910190815560018083015481830180546001600160a01b0319166001600160a01b039092169190911790556002808401549083015560038084015481840155600480850154908401805460ff90921693909260ff1990921691849081111561120f5761120f611617565b021790555060058181019061122690840182611bb5565b50600682810154828201805460ff90921692909160ff191690600190849081111561125357611253611617565b021790555060078281015490820155600880830154908201556009918201549101558061127f81611aff565b915050611125565b60028054600d90815560038054600e80546001600160a01b0319166001600160a01b03909216919091179055600454600f556005546010556006546011805460ff90921692909160ff19169060019084908111156112e7576112e7611617565b02179055506005818101906112fe90840182611bb5565b50600682810154828201805460ff90921692909160ff191690600190849081111561132b5761132b611617565b02179055506007828101549082015560088083015490820155600991820154910155604080516101408101909152600280548291600061136a836119dc565b919050558152602001336001600160a01b0316815260200142815260200142621275006113979190611c8f565b81526020018460038111156113ae576113ae611617565b815260208101849052604001600181526000602080830182905260408084018390526060938401929092528351600290815590840151600380546001600160a01b0319166001600160a01b0390921691909117815591840151600455918301516005556080830151600680549192909160ff191690600190849081111561143757611437611617565b021790555060a082015160058201906114509082611ca2565b5060c08201518160060160006101000a81548160ff0219169083600681111561147b5761147b611617565b021790555060e08201516007820155610100820151600882015561012090910151600990910155600254604080519182523360208301527fdacded9ec488af103536650b25f32b6ee5ffcd9957954cef9198919b3d8abaf6910160405180910390a1505050565b336114eb610b24565b6001600160a01b031614610ae35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061014001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600060038111156115d5576115d5611617565b815260606020820152604001600081526020016000815260200160008152602001600081525090565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052602160045260246000fd5b6004811061163d5761163d611617565b9052565b6000815180845260005b818110156116675760208185018101518683018201520161164b565b506000602082860101526020601f19601f83011685010191505092915050565b6007811061163d5761163d611617565b8a81526001600160a01b038a166020820152604081018990526060810188905260006101406116c9608084018a61162d565b8060a08401526116db81840189611641565b9150506116eb60c0830187611687565b8460e083015283610100830152826101208301529b9a5050505050505050505050565b60006020828403121561172057600080fd5b8135801515811461173057600080fd5b9392505050565b6001600160a01b0381168114610d4e57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261177357600080fd5b81356001600160401b038082111561178d5761178d61174c565b604051601f8301601f19908116603f011681019082821181831017156117b5576117b561174c565b816040528381528660208588010111156117ce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561180157600080fd5b823561180c81611737565b915060208301356001600160401b0381111561182757600080fd5b61183385828601611762565b9150509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561191757603f19898403018552815180518452878101516001600160a01b03168885015286810151878501526060808201519085015260808082015161014091906118b58288018261162d565b505060a08083015182828801526118ce83880182611641565b9250505060c0808301516118e482880182611687565b505060e0828101519086015261010080830151908601526101209182015191909401529386019390860190600101611864565b509098975050505050505050565b60006020828403121561193757600080fd5b813561173081611737565b6001600160a01b0391909116815260200190565b60006020828403121561196857600080fd5b81356001600160401b0381111561197e57600080fd5b61198a84828501611762565b949350505050565b600181811c908216806119a657607f821691505b602082108103610acb57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016119ee576119ee6119c6565b5060010190565b600060208284031215611a0757600080fd5b815161173081611737565b600060208284031215611a2457600080fd5b5051919050565b6020808252600e908201526d10d85c99081a5cc81bdc195b995960921b604082015260600190565b60208082526021908201527f412070726f706f73616c20697320616c726561647920696e2070726f677265736040820152607360f81b606082015260800190565b60208082526022908201527f412062656e65666963696172792061646472657373206973206e656365737361604082015261727960f01b606082015260800190565b81810381811115610b1e57610b1e6119c6565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103611b1557611b156119c6565b60010192915050565b6020810160068310611b3257611b32611617565b91905290565b60ff8181168382160190811115610b1e57610b1e6119c6565b601f821115611b9b57600081815260208120601f850160051c81016020861015611b785750805b601f850160051c820191505b81811015611b9757828155600101611b84565b5050505b505050565b600019600383901b1c191660019190911b1790565b818103611bc0575050565b611bca8254611992565b6001600160401b03811115611be157611be161174c565b611bf581611bef8454611992565b84611b51565b6000601f821160018114611c235760008315611c115750848201545b611c1b8482611ba0565b855550611c88565b600085815260209020601f19841690600086815260209020845b83811015611c5d5782860154825560019586019590910190602001611c3d565b5085831015611c7b5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b80820180821115610b1e57610b1e6119c6565b81516001600160401b03811115611cbb57611cbb61174c565b611cc981611bef8454611992565b602080601f831160018114611cf85760008415611ce65750858301515b611cf08582611ba0565b865550611b97565b600085815260208120601f198616915b82811015611d2757888601518255948401946001909101908401611d08565b5085821015611d455787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fe1af855f8ecf9e2874e8d95b2f5b91f1afa7cea4cfac27e00fb165ebec0e671afa2646970667358221220e019748d779b7a937f1d9fae75cf6228dea74041a2cf20e22cdc8fb616c8daea64736f6c63430008110033";

type GiftDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GiftDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GiftDAO__factory extends ContractFactory {
  constructor(...args: GiftDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GiftDAO> {
    return super.deploy(_giftCard, overrides || {}) as Promise<GiftDAO>;
  }
  override getDeployTransaction(
    _giftCard: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_giftCard, overrides || {});
  }
  override attach(address: string): GiftDAO {
    return super.attach(address) as GiftDAO;
  }
  override connect(signer: Signer): GiftDAO__factory {
    return super.connect(signer) as GiftDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GiftDAOInterface {
    return new utils.Interface(_abi) as GiftDAOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GiftDAO {
    return new Contract(address, _abi, signerOrProvider) as GiftDAO;
  }
}
